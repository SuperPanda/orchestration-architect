{# 00_Template_Header ORCHESTRATION ARCHITECT REGION #}
{# BEGIN ORCHESTRATION ARCHITECT FRAGMENT 00_template_file_header #}
{# fragment: roles/meta_role/templates/fragments/00_template_file_header.j2
 #
 # file: roles/meta_role/templates/tasks/main.yml.j2
 # skeleton file: roles/meta_role/templates/tasks/main.yml.j2.skel
 # version: 0.8.1
 # generatation timestamp (UTC): 20240821T222213Z
 #
 # WARNING: Auto-Generated From Skeleton File
 #          ALL CHANGES WILL BE LOST!
 #          In order to customize this template, update the skeleton
 #          file to customize the file. To modify included fragments
 #          update the corresponding fragment file. To add/remove
 #          fragments or regions, update the template specification.
 #
 #}
{# END ORCHESTRATION ARCHITECT FRAGMENT 00_template_file_header #}
{# BEGIN ORCHESTRATION ARCHITECT FRAGMENT 10_template_vars #}
{# fragment: roles/meta_role/templates/fragments/10_template_variables.j2 #}
{% set metadata = template_variables.metadata %}
{% set specification = template_variables.specification %}
{% set file = template_variables.file %}
{% set role_specification = specification %}
{% set role_name = specification.role_name %}
{% set role_path = specification.role_path  %}
{% if file is not defined %}
  {%- set file_metadata = file_metadata if file_metadata is defined else {} %}
  {%- set file = { "path": file_path, "metadata": file_metadata } %}
{% endif %}
{% set file_path = file.path %}
{% set file_location = role_path ~ '/' ~ file.path %}
{% set parameters = role_specification.parameters %}
{% set defaults = role_specification.defaults %}
{# END ORCHESTRATION ARCHITECT FRAGMENT 10_template_vars #}
{# BEGIN ORCHESTRATION ARCHITECT FRAGMENT 11_common_template_macros #}
{%- macro render_param_value(param) %}
{{- "{{ " + param + " | default('not set') }}" }}
{%- endmacro %}

{%- macro render_param(param, value) %}
{{- param }}: {{ render_param_value(value) }}
{%- endmacro %}

{%- macro render_simple_var(param) %}
{{- render_param(param, param) }}
{%- endmacro %}

{%- macro default_object(obj) %}
({{ obj }} | default({}))
{%- endmacro %}

{%- macro render_param_override(role_name, param) %}
{%- set object_var_name = role_name ~ '.' ~ param %}
{%- set basic_var_name = role_name ~ '_' ~ param %}
{{- ['{{ ', default_object(role_name), '.', param, ' is defined | ternary(', object_var_name, ', ', basic_var_name, ' | default(omit, true)) }}'] | join }}
{%- endmacro %}

{%- macro render_route(role_name) %}
{%- set role_state = role_name ~ "_params.state" %}
{{- "{{ (" ~ role_state ~ "==omit) | ternary('info', " ~ role_state ~ ") }}" }}
{%- endmacro %}
{# END ORCHESTRATION ARCHITECT FRAGMENT 11_common_template_macros #}
{# 01_Header ORCHESTRATION ARCHITECT REGION #}
{# BEGIN ORCHESTRATION ARCHITECT FRAGMENT 20_file_header #}
# file: {{ file_location }}
{% if file.get('metadata',{}).get('auto_generated', false) %}
# ========================================================
# AUTO-GENERATED FILE - DO NOT EDIT!
# This file is generated by an automated system.
# Any manual changes may be overwritten.
# ========================================================
{% endif %}
# role: {{ role_name }}
# version: {{ metadata.version }}
---
{# END ORCHESTRATION ARCHITECT FRAGMENT 20_file_header #}

{# 02_Managed_Region_Before_Content ORCHESTRATION ARCHITECT REGION #}

{# BEGIN ORCHESTRATION ARCHITECT FRAGMENT 30_managed_block_before_content #}
# BEGIN ORCHESTRATION ARCHITECT MANAGED BLOCK 30_managed_block_before_content
{% if file.get('metadata',{}).get('auto_include', []) %}
# BEGIN ORCHESTRATION ARCHITECT MANAGED BLOCK auto_includes
{# Add auto included tasks #}
{% for include_file in file.metadata.auto_include %}
- name: Include task {{ include_file.path }}
  ansible.builtin.include_tasks: "{{ include_file.path }}"
{% endfor %}
# END ORCHESTRATION ARCHITECT MANAGED BLOCK auto_includes
{% endif %}
# END ORCHESTRATION ARCHITECT MANAGED BLOCK 30_managed_block_before_content
{# END ORCHESTRATION ARCHITECT FRAGMENT 30_managed_block_before_content #}

{# 03_Content_Region ORCHESTRATION ARCHITECT REGION #}

{# BEGIN ORCHESTRATION ARCHITECT FRAGMENT 50_content_region_message #}
# BEGIN ORCHESTRATION ARCHITECT MANAGED BLOCK 50_content_region_message
{% if not file.get('metadata',{}).get('auto_generated', false) %}
# NOTE: Manual changes should occur in this region, below the managed block
{% endif %}
# END ORCHESTRATION ARCHITECT MANAGED BLOCK 50_content_region_message
{# END ORCHESTRATION ARCHITECT FRAGMENT 50_content_region_message #}
{# (@customization_msg) Customize Skeleton Here #}

- name: Display supplied arguments to {{ role_name }} when verbosity is set
  when: (ansible_verbosity | int)  > 1
  ansible.builtin.debug:
    msg: |
      {{ render_simple_var(role_name) }}
      {% for param in parameters %}
{{ render_simple_var(role_name ~ '_' ~ param) }}
      {% endfor %}

- debug:
    msg: |
      {{ role_name }}_params:
        {% for param in parameters %}
{{ param }}: "{{ render_param_override(role_name, param) }}"
        {% endfor %}

- name: Pass configuration parameters to the {{ role_name }} role
  vars:
    {{ role_name ~ '_params' }}:
      {% for param in parameters %}
{{ param }}: "{{ render_param_override(role_name, param) }}"
      {% endfor %}

  ansible.builtin.include_tasks:
    file: "{{ render_route(role_name) }}.yml"

{# 04_Managed_Region_After_Content ORCHESTRATION ARCHITECT REGION #}

{# BEGIN ORCHESTRATION ARCHITECT FRAGMENT 90_managed_block_after_content #}
{# fragment: roles/meta_role/templates/fragments/90_managed_block_after_content.j2 #}
# BEGIN ORCHESTRATION ARCHITECT MANAGED BLOCK 90_managed_block_after_content
# END ORCHESTRATION ARCHITECT MANAGED BLOCK 90_managed_block_after_content
{# END ORCHESTRATION ARCHITECT FRAGMENT 90_managed_block_after_content #}
