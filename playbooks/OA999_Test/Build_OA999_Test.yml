# file: playbooks/OA999_Test/Build_OA999_Test.yml
# playbook: Build OA999
# version: 0.8.1
# description:
#     Provisions a device
---
### 02_Managed_Region_Before_Content ORCHESTRATION ARCHITECT REGION ###

# BEGIN ORCHESTRATION ARCHITECT MANAGED BLOCK 30_managed_block_before_content
## Generated from playbook specifications metadata field 'pre_run_playbooks'
- ansible.builtin.import_playbook: "../Meta/Setup_Environment.yml"
# END ORCHESTRATION ARCHITECT MANAGED BLOCK 30_managed_block_before_content

### 03_Content_Region ORCHESTRATION ARCHITECT REGION ###

# BEGIN ORCHESTRATION ARCHITECT MANAGED BLOCK 50_content_region_message
# END ORCHESTRATION ARCHITECT MANAGED BLOCK 50_content_region_message
- hosts: localhost
  gather_facts: no
  vars_files:
    - vars/enrolment.yml
  tasks:
    - name: Check if device enrolment variable file exists
      ansible.builtin.stat:
        path: vars/enrolment.yml
      register: enrolment_file
    - name: Prompt user for device
      when: not enrolment_file.stat.exists
      block:
        - name: Show available disks
          ansible.builtin.find:
            paths: /dev/disk/by-id/
            file_type: link
          register: found_disks
        - debug:
            var: found_disks
        - name: Prompt user for disk selection
          pause:
            prompt: | 
              Select a disk
              {% for file in found_disks.files %}
              {{ loop.index }}: {{ file.path }}
              {% endfor %}
          register: selected_disk_index
        - name: Save the selected disk to enrolment vars file
          copy:
            content: |
              ---
              install_target: "{{ found_disks.files[selected_disk_index.user_input | int - 1].path }}"
            dest: vars/enrolment.yml
    - name: Print installation target
      debug:
        msg: "{{ install_target }} has been selected."

###
- name: Setup Local Keystore Vault
  hosts: localhost
  connection: local
  vars_files: 
    - vars/enrolment.yml
  vars_prompt:
    - name: supplied_luks_passphrase
      prompt: "Enter LUKS passphrase for Local Key Vault"
      private: true
  vars:
    luks_vault: "{{ ansible_env.HOME }}/.OA_Keystore.vault"
    mount_point: "{{ ansible_env.HOME }}/.OA_Keystore"
    map_name: "OA_Keystore"
  tasks:
    - name: Ensure the mount point exists
      file:
        path: "{{ mount_point }}"
        state: directory
        mode: '0700'
    - name: Create a file for the LUKS Container
      community.general.filesize:
        path: "{{ luks_vault }}"
        size: "20 MiB"
        source: /dev/urandom
        mode: "0600"
    - name: Create loop device for vault file
      ansible.builtin.command: losetup --find --nooverlap --show {{ luks_vault }}
      register: loop_device_result
    - debug:
        var: loop_device_result
    - name: Setup LUKS
      ansible.builtin.include_role:
        name: "luks"
      vars:
        luks_label: "Encrypted_{{ map_name }}"
        luks_passphrase: "{{ supplied_luks_passphrase }}"
        luks_mapped_name: "{{ map_name }}"
        luks_state: "opened"
        luks_path: "{{ loop_device_result.stdout }}"
    - name: Create Vault File System
      community.general.filesystem:
        dev: "/dev/mapper/{{ map_name }}"
        type: ext4
        opts: "-L {{ map_name }}"
    - name: Mount Encrypted Volume
      ansible.posix.mount:
        path: "{{ mount_point }}"
        fstype: "ext4"
        src: "LABEL={{ map_name }}"
        state: mounted

- hosts: localhost
  connection: local
  vars_files:
    - vars/bootstrap.yml
    - vars/applications.yml
    - vars/enrolment.yml
  vars:
    storage_state: present
    luks_keyfile: "{{ ansible_env.HOME }}/.OA_Keystore/OA999_LUKS_Provision_temp.key"
    luks_new_keyfile: "{{ ansible_env.HOME }}/.OA_Keystore/OA999_LUKS_Provision_temp.key"
  roles:
    - role: storage
      storage_partition_table: "{{ 'partition_table' | extract(OA999_storage_configuration) }}"
      storage_device: "{{ install_target }}"
    - role: storage
      storage: "{{ 'efi_volume' | extract(OA999_storage_configuration) }}"
    - role: storage
      storage: "{{ 'system_volume' | extract(OA999_storage_configuration) }}"
    - role: storage
      storage: "{{ 'data_volume' | extract(OA999_storage_configuration) }}"



### 04_Managed_Region_After_Content ORCHESTRATION ARCHITECT REGION ###

# BEGIN ORCHESTRATION ARCHITECT MANAGED BLOCK 90_managed_block_after_content
# END ORCHESTRATION ARCHITECT MANAGED BLOCK 90_managed_block_after_content
