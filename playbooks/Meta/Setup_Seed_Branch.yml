---
- name: Setup Seed Branch
  hosts: localhost
  connection: localhost
  gather_facts: false
  vars_files:
    - "../../vars/environment.yml"
    - "{{ base_path }}/vars/repositories.yml"
  vars:
    version: "0.8.0"
    seed_branch: "0.8.0-seed"
    fixtures_path: "{{ base_path }}/fixtures/{{ version }}"
    bare_repo_path: "{{ repositories.orchestration_architect.bare_repo_path }}"
  tasks:
    - name: Ensure base directories exist
      file:
        path: "{{ item }}"
        state: directory
      loop:
        - "{{ fixtures_path }}"
        - "{{ bare_repo_path }}"

    - name: Initialize bare repository if not exists
      command: git init --bare
      args:
        chdir: "{{ bare_repo_path }}"
      when: not ansible_check_mode
      changed_when: false

    - name: Check if the seed branch exists
      command: git show-ref refs/heads/{{ seed_branch }}
      args:
        chdir: "{{ bare_repo_path }}"
      register: seed_branch_check
      failed_when: false
      changed_when: false

    - name: Add worktree for seed branch if it does not exist
      command: git worktree add {{ fixtures_path }} -b {{ seed_branch }}
      args:
        chdir: "{{ bare_repo_path }}"
      when: seed_branch_check.stdout == ''

    - name: Set remote for worktree
      command: git remote add origin {{ bare_repo_path }}
      args:
        chdir: "{{ fixtures_path }}"
      when: seed_branch_check.stdout == ''

    - name: Check if there are any commits in the repository
      command: git rev-parse HEAD
      args:
        chdir: "{{ fixtures_path }}"
      register: git_rev_parse
      failed_when: false
      changed_when: false

    - name: Create empty initial commit in seed branch if no commits exist
      command: git commit --allow-empty -m "Initial empty commit for {{ seed_branch }}"
      args:
        chdir: "{{ fixtures_path }}"
      when: git_rev_parse.stdout == ''

    - name: Push seed branch to bare repository
      command: git push origin {{ seed_branch }}
      args:
        chdir: "{{ fixtures_path }}"
      when: seed_branch_check.stdout == '' or git_rev_parse.stdout == ''
