# vars/specifications/0.8.0/roles.yml
---
roles_specifications:
  metadata:
    non_collection_keys: ['Base', 'metadata']
    role_template_path: "roles/meta_role/templates"
    default_sections:
      - file_header
    collections:
      Meta:
        description: Roles that coordinate, generate, update or modify the states
          of specifications, playbooks, roles, tests, templates, and rendered content.
        tools:
          update_rendered_section:
            description: "Script targets and updates a specified section from a newly
              rerendered \nversion of the file.\nIt identifies and extracts the updated
              content of the specified section\nfrom the rerendered file and replaces
              the corresponding section's content\nin the target file. \nThe file_header
              section will add the --- if not found or\nupdate anything above the file_header
              delimiter.\nUsage <FILE_TO_UPDATE> <RENDERED_TEMPLATE> <SECTION_NAME>\n"
            path: plugins/scripts/update_rendered_section.sh
          embed_template_fragment:
            description: "Script embeds a specified fragment into a template\nprior
              to rendering, enabling dynamic composition of templates\nfrom modular
              parts.\nUsage takes arguments <SRC_FILE> <DEST_FILE> <FRAGMENT_IDENTIFIER>\n
              [--after=<EXISTING_REGION_IDENTIFIER> |\n --before=<EXISTING_REGION_IDENTIFIER>]
              \n[--region=<NEW_REGION_IDENTIFIER>]\n"
            path: plugins/scripts/embed_template_fragment.sh
  Base:
    parameters:
      state: {}
    defaults:
      directory_mode: '0770'
      file_mode: '0660'
    directories:
      - path: tasks
      - path: defaults
    files:
      - id: main_task
        path: tasks/main.yml
        metadata:
          auto_generated: true
          warning: Do not edit this file manually. It is automatically generated.
        sections: []
        template: tasks/main.yml.j2
        state: pristine
      - id: info_task
        path: tasks/info.yml
        state: updated
        metadata:
          auto_include:
            - path: info.pre.yml
              type: task
        template: tasks/base.yml.j2
      - id: info_task_managed_include
        state: pristine
        path: tasks/info.pre.yml
        template: tasks/info.pre.yml.j2
        metadata:
          auto_generated: true
          warning: Do not edit this file manually. It is automatically generated.
      - id: present_task
        state: updated
        path: tasks/present.yml
        template: tasks/base.yml.j2
      - id: absent_task
        state: updated
        path: tasks/absent.yml
        template: tasks/base.yml.j2
      - id: defaults_file
        state: pristine
        metadata:
          auto_generated: true
          warning: "Currently set to pristine"
        path: defaults/main.yml
        template: defaults/main.yml.j2
        sections:
          - file_header
          - 31_managed_defaults
  Meta:
    meta_role:
      role_name: meta_role
      role_path: roles/meta_role
      parameters:
        metadata: {}
        specification: {}
      defaults:
        meta_role_metadata:
          role_template_path: "roles/meta_role/templates"
          non_collection_keys: ['Base', 'metadata']
          default_sections: ['file_header']
    meta_template:
      role_name: meta_template
      role_path: roles/meta_template
      parameters:
        specification: {}
        metadata: {}
      files:
        - id: fragment_template
          path: templates/fragment.j2
        - id: skeleton_template
          path: templates/skeleton.j2
    meta_orchestrator:
      role_name: meta_orchestrator
      role_path: roles/meta_orchestrator
      parameters:
        base_path: {}
        check_mode: {}
        specifications_path: {}
        specifications_version: {}
        specifications_map: {}
        specifications: {}
        schema: {}
        operations: "[process_specifications, process_templates, process_roles,  process_playbooks]"
        scope: "all, schema, params"
      defaults:
        meta_orchestrator_specifications_path: "vars/specifications"
        meta_orchestrator_specifications_version: "latest"
        meta_orchestrator_scope: all
        meta_orchestrator_specifications_map:
          metadata: metadata
          roles_specifications: roles
          playbooks_specifications: playbooks
          templates_specifications: templates
          tests_specifications: tests
        meta_orchestrator_schema:
          metadata: {}
          roles:
            metadata: {}
            Base: {}
            Meta: {}
            Default: {}
          playbooks:
            metadata: {}
            Meta: {}
            Default: {}
          templates:
            metadata: {}
            Base: {}
            Roles: {}
            Playbooks: {}
          tests:
            metadata: {}
            Base: {}
        meta_orchestrator_operations:
          - process_specifications
          - process_templates
          - process_roles
          - process_playbooks
    meta_playbook:
      role_name: meta_playbook
      role_path: roles/meta_playbook
      defaults:
        meta_playbook_metadata:
          default_sections: ['file_header']
          non_collection_keys: ['Base', 'metadata']
        meta_playbook_collection_metadata:
          collection_name: Default
          description: Playbooks not in a collection
          path: playbooks/Default
          template_path: playbooks/base.yml.j2
      parameters:
        metadata: {}
        specification: {}
        collection_metadata: {}
    meta_test:
      role_name: meta_test
      role_path: roles/meta_test
      parameters:
        specification: {}
        metadata: {}
